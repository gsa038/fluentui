pr: none
trigger: none

schedules:
  # minute 0, hour 12 in UTC (5am in UTC+7), any day of month, any month, days 1-5 of week (M-F)
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?tabs=yaml&view=azure-devops#supported-cron-syntax
  - cron: '0 12 * * 1-5'
    displayName: 'Daily release (M-F at 5am)' # will be 4am when DST ends unless trigger is updated
    branches:
      include:
        - master

workspace:
  clean: all

resources:
  repositories:
    - repository: self
      type: git
      ref: master

variables:
  - group: 'Github and NPM secrets'
  - name: docsiteVersion
    value: 0.0.0-nightly
  - name: deployBasePath
    value: 0.0.0-nightly
  - name: officialRelease
    value: true
  - name: nightlyRelease
    value: true
  # below are variables configurable at queue time, so they cannot appear in yml file
  # - name: publishDocsiteOnly # set it to true to only run Job_build_publish_doc
  #   value: false
  # - name: publishOfficial # set it to true to publish package to npm, and publish docsite for official releases
  #   value: false
  # - name: version # version to publish to npm; only make sense when publishOfficial=true
  #   value: canary # value can only be canary/patch/minor

pool: 'Self Host Ubuntu'

jobs:
  - job: Job_build_publish
    displayName: Build and Release Fluent Packages
    # skip this job if publishDocsiteOnly is true
    condition: and(succeeded(), eq(variables.publishDocsiteOnly, false))

    steps:
      - checkout: self

      - template: .devops/templates/tools.yml

      - script: |
          git config user.name "Fluent UI Build"
          git config user.email "fluentui-internal@service.microsoft.com"
          git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/fluentui.git
        displayName: Authenticate git for pushes

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - task: CmdLine@2
        displayName: Checkout branch
        inputs:
          script: >-
            git checkout $(Build.SourceBranchName)

            git pull

      - task: CmdLine@2
        displayName: yarn buildci
        inputs:
          script: yarn buildci

      - task: CmdLine@2
        displayName: '[Nightly] Pack fluentui packages'
        condition: and(succeeded(), eq(variables.publishOfficial, false))
        inputs:
          script: >-
            today=`date +%Y-%m-%d`

            echo date today $today

            echo "##vso[task.setvariable variable=date]$today"

            yarn release:fluentui:pack-nightly

      - task: AzureUpload@2
        displayName: '[Nightly] Upload tarballs'
        condition: and(succeeded(), eq(variables.publishOfficial, false))
        inputs:
          SourcePath: fluentui-nightly
          ConnectedServiceNameARM: 4f791194-9458-4a18-9f9d-6a77ddb74b8c
          StorageAccountRM: fluentsite
          ContainerName: nightly-builds
          # upload tarballs to folder named by today's date
          BlobPrefix: $(date)
          Gzip: true

      - task: AzureUpload@2
        displayName: '[Nightly] Upload tarballs as newest'
        condition: and(succeeded(), eq(variables.publishOfficial, false))
        inputs:
          SourcePath: fluentui-nightly
          ConnectedServiceNameARM: 4f791194-9458-4a18-9f9d-6a77ddb74b8c
          StorageAccountRM: fluentsite
          ContainerName: nightly-builds
          # upload tarballs to folder named 'newest'. This folder is used by the nightly version of docsite to create codesandbox
          BlobPrefix: newest
          Gzip: true

      - task: CmdLine@2
        displayName: '[NPM] Publish to NPM'
        condition: and(succeeded(), eq(variables.publishOfficial, true))
        timeoutInMinutes: 2
        inputs:
          script: >-
            yarn logout

            export NPM_TOKEN=$(npmToken)

            echo "@fluentui:registry=http://registry.npmjs.org/" > .npmrc

            echo "registry=http://registry.npmjs.org/" >> .npmrc

            echo //registry.npmjs.org/:_authToken=$(npmToken) >> .npmrc

            touch packages/fluentui/.npmrc

            echo "@fluentui:registry=http://registry.npmjs.org/" > packages/fluentui/.npmrc

            echo "registry=http://registry.npmjs.org/" >> packages/fluentui/.npmrc

            echo //registry.npmjs.org/:_authToken=$(npmToken) >> packages/fluentui/.npmrc

            yarn release:fluentui:$(version) --yes

            yarn release:fluentui:post-validation
      - task: DeleteFiles@1
        inputs:
          SourceFolder: $(Build.SourcesDirectory)
          Contents: '**/*'
        condition: always()

  - job: Job_build_publish_doc
    displayName: Build and Publish Docsite
    dependsOn: Job_build_publish
    # run this job when the previous job is succeeded or when publishDocsiteOnly is true
    condition: or(succeeded(), eq(variables.publishDocsiteOnly, true))

    steps:
      - checkout: self

      - template: .devops/templates/tools.yml

      - task: Bash@3
        displayName: Yarn
        inputs:
          filePath: yarn-ci.sh

      - task: CmdLine@2
        displayName: 'Set base path and version'
        condition: and(succeeded(), eq(variables.publishOfficial, true))
        inputs:
          script: >-

            ver=`node -p "require('./packages/fluentui/react-northstar/package.json').version"`

            echo "Docsite base path published for version $ver"

            echo "##vso[task.setvariable variable=deployBasePath]$ver"

            echo "##vso[task.setvariable variable=docsiteVersion]$ver"

            echo "##vso[task.setvariable variable=nightlyRelease]false"

      - task: CmdLine@2
        displayName: Build
        inputs:
          script: >-
            echo deployBasePath $(deployBasePath) docsiteVersion $(docsiteVersion) nightlyRelease $(nightlyRelease)


            NODE_ENV=production yarn build:fluentui:docs

      - task: PublishPipelineArtifact@1
        displayName: Publish Docsite as Pipeline Artifact
        inputs:
          path: packages/fluentui/docs/dist
          artifactName: docsite_v$(docsiteVersion)

      - task: AzureUpload@2
        displayName: Upload to Azure
        inputs:
          SourcePath: packages/fluentui/docs/dist
          ConnectedServiceNameARM: 4f791194-9458-4a18-9f9d-6a77ddb74b8c
          StorageAccountRM: fluentsite
          ContainerName: $web
          BlobPrefix: $(deployBasePath)

      - task: DeleteFiles@1
        inputs:
          SourceFolder: $(Build.SourcesDirectory)
          Contents: '**/*'
        condition: always()
